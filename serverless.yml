
plugins:
  - serverless-kms-secrets

service: aws-python

provider:
  name: aws
  runtime: python3.6
  iamRoleStatements:
    - Effect: "Allow"
      Action:
      - "codepipeline:PutApprovalResult"
      Resource: "*"
    - Effect: Allow
      Action:
      - KMS:Decrypt
      Resource: ${self:custom.kmsSecrets.keyArn} 
custom:
  serverless-kms-secrets:
      secretsFile: kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml (optional)
  kmsSecrets: ${file(kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml)}


functions:
  interactive:
    handler: interactive.lambda_handler
    events:
      - http:
          path: callback
          method: post
    environment:
      SLACK_SIGNING_SECRET: ${self:custom.kmsSecrets.secrets.SLACK_SIGNING_SECRET}
      # SLACK_VERIFICATION_TOKEN: ODiZ3pO1gb5VxOzisd5uW5JT
      # SLACK_SIGNING_SECRET: 71250963715074d9fabfc3d746b03d9d

  approval:
    handler: approval.lambda_handler
    events:
      - sns: slackbot
    environment:
      SLACK_WEBHOOK_URL: https://hooks.slack.com/services/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
      SLACK_CHANNEL: botcity